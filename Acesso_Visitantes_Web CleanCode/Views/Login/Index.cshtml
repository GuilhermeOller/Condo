<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Condomínio App - Morador</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-light: #4895ef;
            --primary-dark: #3a0ca3;
            --secondary-color: #3f37c9;
            --accent-color: #f72585;
            --text-color: #2b2d42;
            --text-light: #8d99ae;
            --light-gray: #f8f9fa;
            --white: #ffffff;
            --error-color: #ef233c;
            --success-color: #4cc9f0;
            --warning-color: #ffbe0b;
            --border-radius: 12px;
            --border-radius-sm: 6px;
            --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            --box-shadow-lg: 0 15px 40px rgba(0, 0, 0, 0.12);
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #e2e8f0 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
            color: var(--text-color);
            line-height: 1.6;
        }

        #app-container {
            width: 100%;
            max-width: 100%;
            position: relative;
            min-height: 800px;
            overflow: hidden;
/*             padding: 30px 20px; */
            text-align: center;
        }

        .screen {
            position: absolute;
            width: 100%;
            background-color: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow-lg);
            padding: 40px 30px;
            transition: transform 0.5s cubic-bezier(0.645, 0.045, 0.355, 1), opacity 0.5s ease;
            opacity: 0;
            transform: translateX(100%);
            top: 0;
            left: 0;
        }

            .screen.active {
                opacity: 1;
                transform: translateX(0);
            }

            .screen.left {
                transform: translateX(-100%);
            }

        .logo {
            text-align: center;
            margin-bottom: 30px;
        }

            .logo i {
                font-size: 3.5rem;
                color: var(--primary-color);
                background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                margin-bottom: 15px;
            }

        h2 {
            text-align: center;
            margin-bottom: 25px;
            color: var(--text-color);
            font-weight: 600;
            font-size: 1.8rem;
        }

        .input-group {
            position: relative;
            margin-bottom: 20px;
        }

            .input-group label {
                display: block;
                margin-bottom: 8px;
                font-size: 0.9rem;
                color: var(--text-color);
                font-weight: 500;
            }

            .input-group i {
                position: absolute;
                left: 15px;
                top: 40px;
                color: var(--text-light);
                font-size: 1.1rem;
            }

            .input-group input {
                width: 100%;
                padding: 14px 14px 14px 45px;
                border: 1px solid #e2e8f0;
                border-radius: var(--border-radius-sm);
                font-size: 0.95rem;
                transition: var(--transition);
                background-color: var(--light-gray);
            }

                .input-group input:focus {
                    outline: none;
                    border-color: var(--primary-light);
                    box-shadow: 0 0 0 3px rgba(72, 149, 239, 0.2);
                    background-color: var(--white);
                }

        button {
            width: 100%;
            padding: 14px;
            background: linear-gradient(135deg, var(--primary-color), var(--primary-dark));
            color: white;
            border: none;
            border-radius: var(--border-radius-sm);
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            margin-top: 10px;
            box-shadow: 0 4px 15px rgba(67, 97, 238, 0.3);
        }

            button:hover {
                transform: translateY(-2px);
                box-shadow: 0 7px 20px rgba(67, 97, 238, 0.4);
            }

            button:active {
                transform: translateY(0);
            }

        .forgot-password {
            display: block;
            text-align: right;
            margin: 10px 0 20px;
            color: var(--text-light);
            font-size: 0.85rem;
            text-decoration: none;
            transition: var(--transition);
            cursor: pointer;
        }

            .forgot-password:hover {
                color: var(--primary-color);
            }

        p.link-text {
            text-align: center;
            margin-top: 25px;
            font-size: 0.9rem;
            color: var(--text-light);
        }

            p.link-text a {
                color: var(--primary-color);
                text-decoration: none;
                font-weight: 500;
                transition: var(--transition);
            }

                p.link-text a:hover {
                    color: var(--primary-dark);
                    text-decoration: underline;
                }

        .loading {
            display: none;
            margin: 16px 0;
            color: var(--primary-color);
            font-size: 14px;
            text-align: center;
        }

            .loading.show {
                display: block;
            }

            .loading i {
                animation: spin 1s linear infinite;
                margin-right: 8px;
            }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .error {
            color: var(--error-color);
            margin-top: 8px;
            font-size: 13px;
            font-weight: 500;
            text-align: center;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 14px 20px;
            border-radius: var(--border-radius);
            color: var(--white);
            font-weight: 500;
            box-shadow: var(--box-shadow);
            transform: translateX(120%);
            transition: var(--transition);
            z-index: 1000;
            display: flex;
            align-items: center;
            max-width: 90%;
            font-size: 14px;
        }

            .notification.show {
                transform: translateX(0);
            }

            .notification.success {
                background-color: var(--success-color);
            }

            .notification.error {
                background-color: var(--error-color);
            }

            .notification i {
                margin-right: 8px;
                font-size: 16px;
            }

        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, var(--primary-color), var(--primary-dark));
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        /* Efeito de onda no botão */
        .ripple {
            position: relative;
            overflow: hidden;
        }

            .ripple:after {
                content: "";
                display: block;
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left: 0;
                pointer-events: none;
                background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
                background-repeat: no-repeat;
                background-position: 50%;
                transform: scale(10, 10);
                opacity: 0;
                transition: transform .5s, opacity 1s;
            }

            .ripple:active:after {
                transform: scale(0, 0);
                opacity: 0.3;
                transition: 0s;
            }

        /* Responsividade */
        @@media (max-width: 480px) {
            .screen

        {
            padding: 30px 20px;
        }

        h2 {
            font-size: 1.5rem;
        }

        .input-group input {
            padding: 12px 12px 12px 40px;
        }

        button {
            padding: 12px;
        }

        }
    </style>
</head>
<body>
    <div id="app-container">
        <!-- Tela de Login -->
        <div class="screen active" id="login-screen">
            <div class="container">
                <div class="logo">
                    <img src="~/images/logo_site.png" width="100" height="100" style="display: block; margin: 0 auto;" />
                </div>
                <h2>Acesso Visitante</h2>

                <div class="input-group">
                    <label for="usuario">Usuário</label>
                    <i class="fas fa-user"></i>
                    <input type="text" id="usuario" placeholder="Digite o usuário ou email" required>
                </div>

                <div class="input-group">
                    <label for="senha">Senha</label>
                    <i class="fas fa-lock"></i>
                    <input type="password" id="senha" placeholder="Digite sua senha" required>
                </div>

                <a class="forgot-password" onclick="showScreen('recover-step1')">Esqueceu a senha?</a>

                <button onclick="fazerLogin()">
                    <i class="fas fa-sign-in-alt" style="margin-right: 8px;"></i> Entrar
                </button>
                <div class="loading" id="loading">
                    <i class="fas fa-spinner"></i> Autenticando...
                </div>

                <div class="error" id="error"></div>
                <p class="link-text">
                    Não tem conta? <a href="#" onclick="showScreen('register-screen')">Cadastre-se</a>
                </p>
            </div>
        </div>

        <!-- Tela de Cadastro -->
        <div class="screen" id="register-screen">
            <div class="container">
                <div class="logo">
                    <i class="fas fa-user-plus"></i>
                </div>
                <h2>Criar nova conta</h2>

                <div class="input-group">
                    <label for="cod">Código</label>
                    <i class="fas fa-key"></i>
                    <input type="text" id="cod" placeholder="Digite o código do condomínio" required>
                </div>

                <div class="input-group">
                    <label for="cadEmail">E-mail</label>
                    <i class="fas fa-envelope"></i>
                    <input type="email" id="cadEmail" placeholder="Digite seu e-mail" required>
                </div>

                <div class="input-group">
                    <label for="cadUsuario">Usuário</label>
                    <i class="fas fa-at"></i>
                    <input type="text" id="cadUsuario" placeholder="Digite um nome de usuário" required>
                </div>

                <div class="input-group">
                    <label for="cadSenha">Senha</label>
                    <i class="fas fa-lock"></i>
                    <input type="password" id="cadSenha" placeholder="Digite sua senha" required>
                </div>

                <button class="ripple" onclick="cadastrar()">
                    <i class="fas fa-user-plus" style="margin-right: 8px;"></i> Cadastrar
                </button>

                <p class="link-text">
                    Já tem uma conta? <a href="#" onclick="showScreen('login-screen')">Faça login</a>
                </p>
            </div>
        </div>

        <!-- Telas de Recuperação de Senha (3 etapas) -->
        <div class="screen" id="recover-step1">
            <div class="container">
                <div class="logo">
                    <i class="fas fa-key"></i>
                </div>
                <h2>Recuperar Senha</h2>
                <p style="margin-bottom: 25px; color: var(--text-light); font-size: 0.95rem; text-align: center;">
                    Digite seu e-mail para receber o código de verificação
                </p>

                <div class="input-group">
                    <label for="recover-email">E-mail</label>
                    <i class="fas fa-envelope"></i>
                    <input type="email" id="recover-email" placeholder="Digite seu e-mail" required>
                </div>

                <button class="ripple" onclick="sendRecoveryCode()">
                    <i class="fas fa-paper-plane" style="margin-right: 8px;"></i> Enviar Código
                </button>

                <p class="link-text">
                    <a href="#" onclick="showScreen('login-screen')">
                        <i class="fas fa-arrow-left" style="margin-right: 5px;"></i> Voltar para login
                    </a>
                </p>
            </div>
        </div>

        <div class="screen" id="recover-step2">
            <div class="container">
                <div class="logo">
                    <i class="fas fa-key"></i>
                </div>
                <h2>Verifique seu e-mail</h2>
                <p style="margin-bottom: 25px; color: var(--text-light); font-size: 0.95rem; text-align: center;">
                    Enviamos um código para <span id="email-display" style="font-weight: 500; color: var(--primary-color);"></span>
                </p>

                <div class="input-group">
                    <label for="recovery-code">Código de verificação</label>
                    <i class="fas fa-shield-alt"></i>
                    <input type="text" id="recovery-code" placeholder="Digite o código recebido" required>
                </div>

                <button class="ripple" onclick="verifyRecoveryCode()">
                    <i class="fas fa-check" style="margin-right: 8px;"></i> Verificar
                </button>
@* 
                <p class="link-text">
                    <a href="#" onclick="resendCode()">Reenviar código</a>
                </p> *@
            </div>
        </div>

        <div class="screen" id="recover-step3">
            <div class="container">
                <div class="logo">
                    <i class="fas fa-key"></i>
                </div>
                <h2>Nova Senha</h2>
                <p style="margin-bottom: 25px; color: var(--text-light); font-size: 0.95rem; text-align: center;">
                    Digite e confirme sua nova senha
                </p>

                <div class="input-group">
                    <label for="new-password">Nova Senha</label>
                    <i class="fas fa-lock"></i>
                    <input type="password" id="new-password" placeholder="Digite sua nova senha" required>
                </div>

                <div class="input-group">
                    <label for="confirm-password">Confirmar Senha</label>
                    <i class="fas fa-lock"></i>
                    <input type="password" id="confirm-password" placeholder="Confirme sua nova senha" required>
                </div>

                <button class="ripple" onclick="updatePassword()">
                    <i class="fas fa-save" style="margin-right: 8px;"></i> Salvar Nova Senha
                </button>
            </div>
        </div>
    </div>
    <div class="loading" id="loading">
        <i class="fas fa-spinner"></i> Autenticando...
    </div>

    <div class="error" id="error"></div>


    <script>
        // Controle das telas
        function showScreen(screenId) {
            document.querySelectorAll('.screen').forEach(screen => {
                screen.classList.remove('active', 'left');
            });

            const screen = document.getElementById(screenId);
            screen.classList.add('active');

            if (event) {
                const currentScreen = event.currentTarget.closest('.screen');
                currentScreen.classList.add('left');
            }
        }

        async function fazerLogin() {
            const usuario = document.getElementById("usuario").value;
            const senha = document.getElementById("senha").value;
            const errorDiv = document.getElementById("error");
            const loadingDiv = document.getElementById("loading");
            const ip = await obterIpPublico();

            errorDiv.textContent = "";

            if (!usuario || !senha) {
                errorDiv.textContent = "Por favor, preencha todos os campos.";
                return;
            }

            loadingDiv.classList.add("show");

            try {
                const resposta = await fetch("/LoginApi/Login", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    credentials: 'include',
                    body: JSON.stringify({ usuario, senha, ip })
                });

                if (resposta.ok) {
                    window.location.href = "/Visitante/Index";
                } else {
                    const dadosErro = await resposta.json();
                    errorDiv.textContent = dadosErro.erro || "Usuário ou senha inválidos";
                }
            } catch (erro) {
                errorDiv.textContent = "Erro ao conectar com o servidor. Tente novamente.";
                console.error("Erro no login:", erro);
            } finally {
                loadingDiv.classList.remove("show");
            }
        }

        async function cadastrar() {

            const ip = await obterIpPublico();
            const usuario = document.getElementById("cadUsuario").value;
            const email = document.getElementById("cadEmail").value;
            const cod = document.getElementById("cod").value;
            const senha = document.getElementById("cadSenha").value;

            if (!usuario || !senha || !email || !cod) {
                showNotification('Por favor preencha todos os campos', 'error');
                return;
            }

            try {
                const resposta = await fetch("/LoginApi/Cadastrar", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    credentials: 'include',
                    body: JSON.stringify({ usuario, senha, email, cod, ip })
                });

                if (resposta.ok) {
                    showNotification('Cadastro realizado com sucesso!TESTE', 'success');
                    showScreen('login-screen');
                } else {
                    const dadosErro = await resposta.json();
                    showNotification(dadosErro.erro || 'Erro ao cadastrar', 'error');
                }
            } catch (erro) {
                errorDiv.textContent = "Erro ao conectar com o servidor. Tente novamente.";
                console.error("Erro no login:", erro);
            }
        }

        async function sendRecoveryCode() {
            const Email = document.getElementById('recover-email').value;
            if (!Email) {
                showNotification('Por favor, digite seu e-mail', 'error');
                return;
            }
            try{
                const Ip = await obterIpPublico();

                const res = await fetch(`/LoginApi/EnviarToken`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({ Email, Ip })

                });

                if (res.ok) {
                    document.getElementById('email-display').textContent = Email;
                    showScreen('recover-step2');
                    showNotification('Código enviado para seu e-mail!', 'success');
                } else {
                    const dadosErro = await res.json();
                    showNotification(dadosErro.erro || 'Erro ao cadastrar', 'error');
                }
            } catch (erro) {
                showNotification('Erro ao cadastrar' + erro, 'error');
            }
            
            
        }

        async function verifyRecoveryCode() {
            const code = document.getElementById('recovery-code').value;
            if (!code) {
                showNotification('Por favor, digite o código recebido', 'error');
                return;
            }
            try{
                const res = await fetch(`/LoginApi/VerificaToken/${code}`, {
                method: 'POST',
                credentials: 'include'
                });

            if (res.ok) {
                showScreen('recover-step3');
                showNotification('Código correto!', 'success');
            } else {
                const dadosErro = await res.json();
                showNotification(dadosErro.erro || 'Erro ao verificar código', 'error');
            }
            } catch (erro) {
                showNotification('Erro ao verificar código' + erro, 'error');
            }
        }

        async function updatePassword() {
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;

            if (!newPassword || !confirmPassword) {
                showNotification('Por favor, preencha ambos os campos', 'error');
                return;
            }

            if (newPassword !== confirmPassword) {
                showNotification('As senhas não coincidem', 'error');
                return;
            }

            try{
                const res = await fetch(`/LoginApi/UpdateSenha/${newPassword}`, {
                method: 'PUT',
                credentials: 'include'
                });

                if (res.ok) {
                    showScreen('login-screen');
                    showNotification('Senha alterada com sucesso!', 'success');
                } else {
                    const dadosErro = await res.json();
                    showNotification(dadosErro.erro || 'Erro ao alterar senha', 'error');
                }

            } catch (erro) {
                showNotification('Erro ao alterar senha' + erro, 'error');
            }
        }

        async function obterIpPublico() {
            const response = await fetch("https://api.ipify.org?format=json");
            const data = await response.json();
            return data.ip;
        }

        async function resendCode() {
            showNotification('Código reenviado para seu e-mail!', 'success');
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                ${message}
            `;
            document.body.appendChild(notification);

            setTimeout(() => {
                notification.classList.add('show');
            }, 10);

            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 3000);
        }

        document.addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                fazerLogin();
            }
        });
        // Adiciona efeito de ripple a todos os botões
        document.querySelectorAll('.ripple').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                let x = e.clientX - e.target.getBoundingClientRect().left;
                let y = e.clientY - e.target.getBoundingClientRect().top;

                let ripple = document.createElement('span');
                ripple.style.left = `${x}px`;
                ripple.style.top = `${y}px`;
                this.appendChild(ripple);

                setTimeout(() => ripple.remove(), 500);
            });
        });
    </script>
</body>
</html>